{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "spotifydatafactoryv2"
		},
		"adls_ls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'adls_ls'"
		},
		"source_sql_ls_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'source_sql_ls'"
		},
		"adls_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://spotifydatastoragev1.dfs.core.windows.net/"
		},
		"source_sql_ls_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "spotifysql.database.windows.net"
		},
		"source_sql_ls_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "spotifydb"
		},
		"source_sql_ls_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminmanas"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Dim_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_Latest_Data",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Last_CDC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT count(*) as count \nFROM @{pipeline().parameters.schema}.@{pipeline().parameters.table} \nWHERE @{pipeline().parameters.cdc_col} > '@{if(empty(pipeline().parameters.from_date), activity('Last_CDC').output.value[0].cdc, pipeline().parameters.from_date)}'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "source_sql_ds",
								"type": "DatasetReference",
								"parameters": {
									"schema": {
										"value": "@pipeline().parameters.schema",
										"type": "Expression"
									},
									"table": {
										"value": "@pipeline().parameters.table",
										"type": "Expression"
									},
									"cdc_col": {
										"value": "@pipeline().parameters.cdc_col",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Last_CDC",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "cdc_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().parameters.container_name",
										"type": "Expression"
									},
									"directory": {
										"value": "@pipeline().parameters.cdc_directory",
										"type": "Expression"
									},
									"file": "cdc.json"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Check Latest Data",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get_Latest_Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Get_Latest_Data').output.value[0].count, 0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "204_Failure_No_New_Data",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "No new data available in the table",
										"errorCode": "204"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "SQL_to_ADLS_User",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT count(*) as count \nFROM @{pipeline().parameters.schema}.@{pipeline().parameters.table} \nWHERE @{pipeline().parameters.cdc_col} > '@{if(empty(pipeline().parameters.from_date), activity('Last_CDC').output.value[0].cdc, pipeline().parameters.from_date)}'\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_sql_ds",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@pipeline().parameters.schema",
													"type": "Expression"
												},
												"table": {
													"value": "@pipeline().parameters.table",
													"type": "Expression"
												},
												"cdc_col": {
													"value": "@pipeline().parameters.cdc_col",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "adls_sink_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.container_name",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.data_directory",
													"type": "Expression"
												},
												"file": {
													"value": "@concat(pipeline().parameters.table,'_', utcNow())",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "update_last_doc",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Max_CDC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "cdc",
													"value": {
														"value": "@activity('Max_CDC').output.value[0].max_cdc_date",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "cdc_json_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.container_name",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.cdc_directory",
													"type": "Expression"
												},
												"file": "empty.json"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "cdc_json_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.container_name",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.cdc_directory",
													"type": "Expression"
												},
												"file": "cdc.json"
											}
										}
									]
								},
								{
									"name": "Max_CDC",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "SQL_to_ADLS_User",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT max(@{pipeline().parameters.cdc_col}) as max_cdc_date from @{pipeline().parameters.schema}.@{pipeline().parameters.table}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "source_sql_ds",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@pipeline().parameters.schema",
													"type": "Expression"
												},
												"table": {
													"value": "@pipeline().parameters.table",
													"type": "Expression"
												},
												"cdc_col": {
													"value": "@pipeline().parameters.cdc_col",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Max_CDC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "temp",
										"value": {
											"value": "@activity('Max_CDC').output.value[0].max_cdc_date",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"table": {
						"type": "string",
						"defaultValue": "DimUser"
					},
					"cdc_col": {
						"type": "string",
						"defaultValue": "updated_at"
					},
					"from_date": {
						"type": "string"
					},
					"container_name": {
						"type": "string"
					},
					"data_directory": {
						"type": "string"
					},
					"cdc_directory": {
						"type": "string"
					}
				},
				"variables": {
					"temp": {
						"type": "String"
					},
					"cdc": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"schema": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/source_sql_ds')]",
				"[concat(variables('factoryId'), '/datasets/cdc_json_ds')]",
				"[concat(variables('factoryId'), '/datasets/adls_sink_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls_sink_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cdc_json_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_sql_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_sql_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					},
					"cdc_col": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adls_ls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('adls_ls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_sql_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('source_sql_ls_properties_typeProperties_server')]",
					"database": "[parameters('source_sql_ls_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('source_sql_ls_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('source_sql_ls_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Loop_All')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Looping Tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup and Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup and Get Metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Metadatadriven Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Dim_Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"schema": {
												"value": "@item().schema",
												"type": "Expression"
											},
											"table": {
												"value": "@item().table",
												"type": "Expression"
											},
											"cdc_col": {
												"value": "@item().cdc_col",
												"type": "Expression"
											},
											"container_name": {
												"value": "@item().container_name",
												"type": "Expression"
											},
											"data_directory": {
												"value": "@item().data_directory",
												"type": "Expression"
											},
											"cdc_directory": {
												"value": "@item().cdc_directory",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup and Get Metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "cdc_json_ds",
								"type": "DatasetReference",
								"parameters": {
									"container": "metadata",
									"directory": "source_metadata",
									"file": "metadata.json"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"temp": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/cdc_json_ds')]",
				"[concat(variables('factoryId'), '/pipelines/Dim_Pipeline')]"
			]
		}
	]
}